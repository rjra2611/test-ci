name: Build

on: [push, pull_request]

jobs:
  release:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install packaging dependencies
        run: pip install wheel


  portable:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, windows-latest]
        python-version: ["3.10"]

    # on a new tag (release), after 'test' and 'release' have ended we will run this
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [release]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Wait for pip release, sleep in seconds
        run: sleep 900
        shell: bash

      - name: Setup Portable
        run: pip install pyinstaller lean==${GITHUB_REF##*/}

      - name: Create Portable
        if: matrix.os == 'windows-latest'
        run: |
          del /s /f portable
          mkdir portable
          cd portable
          pyinstaller ../scripts/main.spec
          7z a -tzip dist/lean.${GITHUB_REF##*/}.${{ matrix.os }}.zip dist/lean
        shell: cmd

      - name: Create Portable
        if: matrix.os == 'macos-12' || matrix.os == 'ubuntu-22.04'
        run: |
          rm -rf portable
          mkdir portable
          cd portable
          pyinstaller ../scripts/main.spec
          zip -r dist/lean.${GITHUB_REF##*/}.${{ matrix.os }}.zip dist/lean

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: us-west-1

      - name: Publish To S3
        run:
          aws s3 cp dist/lean.${GITHUB_REF##*/}.${{ matrix.os }}.zip s3://${{ secrets.AWS_BUCKET }}/${{ matrix.os }}/ --content-type "application/zip"

      - name: Cleanup
        if: matrix.os == 'windows-latest'
        run: |
          cd ..
          del /s /f portable
      
      - name: Cleanup
        if: matrix.os == 'macos-12' || matrix.os == 'ubuntu-22.04'
        run: |
          cd ..
          rm -rf portable